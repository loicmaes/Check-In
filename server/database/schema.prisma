generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uid       String   @id @default(uuid())
  username  String   @unique @db.VarChar(24)
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authSessions AuthSession[]
  sessions     Session[]
  projects     Project[]

  @@map("users")
}

model AuthSession {
  userUid   String
  token     String   @default(uuid())
  agent     String
  startedAt DateTime @default(now())
  expiresAt DateTime

  user User @relation(fields: [userUid], references: [uid], onDelete: Cascade)

  @@id([userUid, token])
  @@map("authSessions")
}

enum SessionType {
  default
  live
}

model Session {
  uid        String      @id @default(uuid())
  userUid    String
  projectUid String?
  name       String
  type       SessionType @default(default)
  startedAt  DateTime    @default(now())
  endedAt    DateTime?

  user    User     @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  project Project? @relation(fields: [projectUid], references: [uid], onDelete: SetNull)

  @@unique([name, projectUid])
  @@map("sessions")
}

model Project {
  uid         String   @id @default(uuid())
  userUid     String
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sessions Session[]

  user User @relation(fields: [userUid], references: [uid], onDelete: Cascade)

  @@map("projects")
}
